#+TITLE:  Dotfiles

* TABLE OF CONTENTS :toc:
- [[#zsh][ZSH]]
  - [[#instant-prompt][INSTANT PROMPT]]
  - [[#migrating-from-bash][Migrating from bash]]
  - [[#path-to-oh-my-zsh][Path to oh-my-zsh]]
  - [[#theme][Theme]]
  - [[#settings][Settings]]
  - [[#plugins][Plugins]]
  - [[#source-oh-my-zsh][Source oh-my-zsh]]
  - [[#user-configuration][User configuration]]
  - [[#arcolinux-settings][ARCOLINUX SETTINGS]]
- [[#tmux][Tmux]]

* ZSH
** INSTANT PROMPT
Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
Initialization code that may require console input (password prompts, [y/n]
confirmations, etc.) must go above this block; everything else may go below.
#+begin_src sh :tangle .zshrc
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
#+end_src

** Migrating from bash
If you come from bash you might have to change your $PATH.
#+begin_src sh :tangle .zshrc
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#+end_src

** Path to oh-my-zsh
Path to your oh-my-zsh installation.
*** Github
installation via script from github
#+begin_src sh :tangle .zshrc
#export ZSH="/home/$USER/.oh-my-zsh"
#+end_src
*** Yay/Paru
installation via yay/paru -S oh-my-zsh-git
#+begin_src sh :tangle .zshrc
export ZSH=/usr/share/oh-my-zsh/
#+end_src

** Theme
Set name of the theme to load --- if set to "random", it will
load a random theme each time oh-my-zsh is loaded, in which case,
to know which specific one was loaded, run: echo $RANDOM_THEME
See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#+begin_src sh :tangle .zshrc
ZSH_THEME="powerlevel10k/powerlevel10k"
#+end_src

*** Prompt adjustments
**** Left margin
#+begin_src sh
typeset -g POWERLEVEL9K_LEFT_PROMPT_FIRST_SEGMENT_START_SYMBOL=" "
#+end_src
**** Directory max length
#+begin_src sh
typeset -g POWERLEVEL9K_DIR_MAX_LENGTH=1
#+end_src

*** Random theme list
Set list of themes to pick from when loading at random
Setting this variable when ZSH_THEME=random will cause zsh to load
a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
If set to an empty array, this variable will have no effect.
#+begin_src sh :tangle .zshrc
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )
# ZSH_THEME_RANDOM_IGNORED=(pygmalion tjkirch_mod)
#+end_src

** Settings
*** Case sensitivity
Uncomment the following line to use case-sensitive completion.
#+begin_src sh :tangle .zshrc
# CASE_SENSITIVE="true"
#+end_src

*** Hyphen insensitivity
Uncomment the following line to use hyphen-insensitive completion.
Case-sensitive completion must be off. _ and - will be interchangeable.
#+begin_src sh :tangle .zshrc
# HYPHEN_INSENSITIVE="true"
#+end_src

*** Auto update
Uncomment the following line to disable bi-weekly auto-update checks.
#+begin_src sh :tangle .zshrc
# DISABLE_AUTO_UPDATE="true"
#+end_src

*** Update prompt
Uncomment the following line to automatically update without prompting.
#+begin_src sh :tangle .zshrc
# DISABLE_UPDATE_PROMPT="true"
#+end_src

*** Auto-update frequency
Uncomment the following line to change how often to auto-update (in days).
#+begin_src sh :tangle .zshrc
# export UPDATE_ZSH_DAYS=13
#+end_src

*** Magic function
Uncomment the following line if pasting URLs and other text is messed up.
#+begin_src sh :tangle .zshrc
# DISABLE_MAGIC_FUNCTIONS=true
#+end_src

*** Ls colors
# Uncomment the following line to disable colors in ls.
#+begin_src sh :tangle .zshrc
# DISABLE_LS_COLORS="true"
#+end_src

*** Auto title
Uncomment the following line to disable auto-setting terminal title.
#+begin_src sh :tangle .zshrc
# DISABLE_AUTO_TITLE="true"
#+end_src

*** Auto-correction
Uncomment the following line to enable command auto-correction.
#+begin_src sh :tangle .zshrc
# ENABLE_CORRECTION="true"
#+end_src

*** Completion dots
Uncomment the following line to display red dots whilst waiting for completion.
#+begin_src sh :tangle .zshrc
# COMPLETION_WAITING_DOTS="true"
#+end_src

*** VCS
Uncomment the following line if you want to disable marking untracked files
under VCS as dirty. This makes repository status check for large repositories
much, much faster.
#+begin_src sh :tangle .zshrc
DISABLE_UNTRACKED_FILES_DIRTY="true"
#+end_src

*** Execution time stamp
Uncomment the following line if you want to change the command execution time
stamp shown in the history command output.
You can set one of the optional three formats:
"mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
or set a custom format using the strftime function format specifications,
see 'man strftime' for details.
#+begin_src sh :tangle .zshrc
# HIST_STAMPS="mm/dd/yyyy"
#+end_src

*** Zsh custom folder
# Would you like to use another custom folder than $ZSH/custom?
#+begin_src sh :tangle .zshrc
# ZSH_CUSTOM=/path/to/new-custom-folder
#+end_src

** Plugins
 Which plugins would you like to load?
 Standard plugins can be found in $ZSH/plugins/
 Custom plugins may be added to $ZSH_CUSTOM/plugins/
 Example format: plugins=(rails git textmate ruby lighthouse)
 Add wisely, as too many plugins slow down shell startup.
#+begin_src sh :tangle .zshrc
plugins=(
    # git
    zsh-z
    zsh-completions
    zsh-autosuggestions
    zsh-syntax-highlighting
    fzf
)
#+end_src

** Source oh-my-zsh
#+begin_src sh :tangle .zshrc
source $ZSH/oh-my-zsh.sh
#+end_src

** User configuration
*** Manuals path
#+begin_src sh :tangle .zshrc
# export MANPATH="/usr/local/man:$MANPATH"
#+end_src

*** Language
You may need to manually set your language environment
#+begin_src sh :tangle .zshrc
# export LANG=en_US.UTF-8
#+end_src

*** Text Editor
Preferred editor for local and remote sessions
#+begin_src sh :tangle .zshrc
export EDITOR='emacs'
#+end_src

*** Browser
Preferred browser
#+begin_src sh :tangle .zshrc
export BROWSER='brave'
#+end_src

*** Zsh-z
case sensitivity for zsh-z
#+begin_src sh :tangle .zshrc
export ZSHZ_CASE=smart
#+end_src

*** Doom emacs
Doom emacs config directory
#+begin_src sh :tangle .zshrc
export PATH="$HOME/.emacs.d/bin:$PATH"
export DOOMDIR="$HOME/.config/doom"
#+end_src

*** Pasting
Disable highlight when pasting
#+begin_src sh :tangle .zshrc
zle_highlight+=(paste:none)
#+end_src

*** Complilation flags
#+begin_src sh :tangle .zshrc
# export ARCHFLAGS="-arch x86_64"
#+end_src

** ARCOLINUX SETTINGS

#+begin_src sh :tangle .zshrc
setopt GLOB_DOTS

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

export HISTCONTROL=ignoreboth:erasedups

# Make neovim the default editor
export EDITOR='nvim'
export VISUAL='nvim'


if [ -d "$HOME/.bin" ] ;
  then PATH="$HOME/.bin:$PATH"
fi

if [ -d "$HOME/.local/bin" ] ;
  then PATH="$HOME/.local/bin:$PATH"
fi

###############################################################################
#                                   aliases                                   #
###############################################################################

#open
alias open='xdg-open'

#safe deleting
alias trash='rmtrash'
alias del='rmtrash'
alias dirtrash='rmdirtrash'
alias trashdir='rmdirtrash'
alias deldir='rmdirtrash'
alias rm='echo Use "del" or the full path i.e. "/bin/rm"'
alias rmdir='echo Use "deldir" or the full path i.e. "/bin/rmdir"'

#nvim
alias vim='nvim'
alias vi='nvim'

#rogauracore | keyboard backlight
alias color="sudo rogauracore"

#tree ignores
alias tree='tree -I "node_modules|venv|vendor"'

#bat > cat
alias cat='bat'

#quick clear
alias c='clear'

#tmuxinator
alias mux='tmuxinator'
alias work='tmuxinator'

#clipping
alias toclip='xclip -selection clipboard'

config() {
    if [ "$1" = "" ]; then
        lazygit -g dotconfig -w /home/chachi;
    else
        git --git-dir=$HOME/dotconfig --work-tree=$HOME "$@";
    fi
}

#list
alias exa='exa --color=auto --group-directories-first' # Permanent options
alias ls='exa --color=auto'
alias la='exa -a'
alias ll='exa -l'
alias l='exa -lah'
alias l.="exa -A | egrep '^\.'"

#fix obvious typo's
alias cd..='cd ..'
alias pdw="pwd"
alias udpate='sudo pacman -Syyu'
alias upate='sudo pacman -Syyu'
alias updte='sudo pacman -Syyu'
alias updqte='sudo pacman -Syyu'
alias upqll="paru -Syu --noconfirm"
alias upal="paru -Syu --noconfirm"

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

#readable output
alias df='df -h'

#pacman unlock
alias unlock="sudo rm /var/lib/pacman/db.lck"
alias rmpacmanlock="sudo rm /var/lib/pacman/db.lck"

#arcolinux logout unlock
alias rmlogoutlock="sudo rm /tmp/arcologout.lock"

#free
alias free="free -mt"

#continue download
alias wget="wget -c"

#userlist
alias userlist="cut -d: -f1 /etc/passwd"

#merge new settings
alias merge="xrdb -merge ~/.Xresources"

# Aliases for software managment
# pacman or pm
alias pacman='sudo pacman --color auto'
alias update='sudo pacman -Syyu'

# yay as aur helper - updates everything
alias pksyua="paru -Syu --noconfirm"
alias upall="paru -Syu --noconfirm"
alias yeet="yay -Rns"

#ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"

#grub update
alias update-grub="sudo grub-mkconfig -o /boot/grub/grub.cfg"

#add new fonts
alias update-fc='sudo fc-cache -fv'

#copy/paste all content of /etc/skel over to home folder - backup of config created - beware
alias skel='cp -Rf ~/.config ~/.config-backup-$(date +%Y.%m.%d-%H.%M.%S) && cp -rf /etc/skel/* ~'
#backup contents of /etc/skel to hidden backup folder in home/user
alias bupskel='cp -Rf /etc/skel ~/.skel-backup-$(date +%Y.%m.%d-%H.%M.%S)'

#copy bashrc-latest over on bashrc - cb= copy bashrc
#alias cb='sudo cp /etc/skel/.bashrc ~/.bashrc && source ~/.bashrc'
#copy /etc/skel/.zshrc over on ~/.zshrc - cb= copy zshrc
alias cz='sudo cp /etc/skel/.zshrc ~/.zshrc && exec zsh'

#switch between bash and zsh
alias tobash="sudo chsh $USER -s /bin/bash && echo 'Now log out.'"
alias tozsh="sudo chsh $USER -s /bin/zsh && echo 'Now log out.'"

#switch between lightdm and sddm
alias tolightdm="sudo pacman -S lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings --noconfirm --needed ; sudo systemctl enable lightdm.service -f ; echo 'Lightm is active - reboot now'"
alias tosddm="sudo pacman -S sddm --noconfirm --needed ; sudo systemctl enable sddm.service -f ; echo 'Sddm is active - reboot now'"

#quickly kill conkies
alias kc='killall conky'

#hardware info --short
alias hw="hwinfo --short"

#skip integrity check
alias paruskip='paru -S --mflags --skipinteg'
alias yayskip='yay -S --mflags --skipinteg'
alias trizenskip='trizen -S --skipinteg'

#check vulnerabilities microcode
alias microcode='grep . /sys/devices/system/cpu/vulnerabilities/*'

#get fastest mirrors in your neighborhood
alias mirror="sudo reflector -f 30 -l 30 --number 10 --verbose --save /etc/pacman.d/mirrorlist"
alias mirrord="sudo reflector --latest 30 --number 10 --sort delay --save /etc/pacman.d/mirrorlist"
alias mirrors="sudo reflector --latest 30 --number 10 --sort score --save /etc/pacman.d/mirrorlist"
alias mirrora="sudo reflector --latest 30 --number 10 --sort age --save /etc/pacman.d/mirrorlist"
#our experimental - best option for the moment
alias mirrorx="sudo reflector --age 6 --latest 20  --fastest 20 --threads 5 --sort rate --protocol https --save /etc/pacman.d/mirrorlist"
alias mirrorxx="sudo reflector --age 6 --latest 20  --fastest 20 --threads 20 --sort rate --protocol https --save /etc/pacman.d/mirrorlist"

#mounting the folder Public for exchange between host and guest on virtualbox
alias vbm="sudo /usr/local/bin/arcolinux-vbox-share"

#shopt
#shopt -s autocd # change to named directory
#shopt -s cdspell # autocorrects cd misspellings
#shopt -s cmdhist # save multi-line commands in history as single line
#shopt -s dotglob
#shopt -s histappend # do not overwrite history
#shopt -s expand_aliases # expand aliases

#youtube-dl
alias yta-aac="youtube-dl --extract-audio --audio-format aac "
alias yta-best="youtube-dl --extract-audio --audio-format best "
alias yta-flac="youtube-dl --extract-audio --audio-format flac "
alias yta-m4a="youtube-dl --extract-audio --audio-format m4a "
alias yta-mp3="youtube-dl --extract-audio --audio-format mp3 "
alias yta-opus="youtube-dl --extract-audio --audio-format opus "
alias yta-vorbis="youtube-dl --extract-audio --audio-format vorbis "
alias yta-wav="youtube-dl --extract-audio --audio-format wav "

alias ytv-best="youtube-dl -f bestvideo+bestaudio "

#Recent Installed Packages
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl"
alias riplong="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -3000 | nl"

#iso and version used to install ArcoLinux
alias iso="cat /etc/dev-rel | awk -F '=' '/ISO/ {print $2}'"

#Cleanup orphaned packages
alias cleanup='sudo pacman -Rns $(pacman -Qtdq)'

#search content with ripgrep
alias rg="rg --sort path"

#get the error messages from journalctl
alias jctl="journalctl -p 3 -xb"

#nano for important configuration files
#know what you do in these files
alias nlightdm="sudo $EDITOR /etc/lightdm/lightdm.conf"
alias npacman="sudo $EDITOR /etc/pacman.conf"
alias ngrub="sudo $EDITOR /etc/default/grub"
alias nconfgrub="sudo $EDITOR /boot/grub/grub.cfg"
alias nmkinitcpio="sudo $EDITOR /etc/mkinitcpio.conf"
alias nmirrorlist="sudo $EDITOR /etc/pacman.d/mirrorlist"
alias nsddm="sudo $EDITOR /etc/sddm.conf"
alias nfstab="sudo $EDITOR /etc/fstab"
alias nnsswitch="sudo $EDITOR /etc/nsswitch.conf"
alias nsamba="sudo $EDITOR /etc/samba/smb.conf"
alias nb="$EDITOR ~/.bashrc"
alias nz="$EDITOR ~/.zshrc"

#gpg
#verify signature for isos
alias gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
alias fix-gpg-check="gpg2 --keyserver-options auto-key-retrieve --verify"
#receive the key of a developer
alias gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-gpg-retrieve="gpg2 --keyserver-options auto-key-retrieve --receive-keys"
alias fix-key="[ -d ~/.gnupg ] || mkdir ~/.gnupg ; cp /etc/pacman.d/gnupg/gpg.conf ~/.gnupg/ ; echo 'done'"

#fixes
alias fix-permissions="sudo chown -R $USER:$USER ~/.config ~/.local"

#maintenance
alias big="expac -H M '%m\t%n' | sort -h | nl"
alias downgrada="sudo downgrade --ala-url https://bike.seedhost.eu/arcolinux/"

#systeminfo
alias probe="sudo -E hw-probe -all -upload"

#shutdown or reboot
alias ssn="sudo shutdown now"
alias sr="sudo reboot"

#update betterlockscreen images
alias bls="betterlockscreen -u /usr/share/backgrounds/arcolinux/"

#give the list of all installed desktops - xsessions desktops
alias xd="ls /usr/share/xsessions"

# # ex = EXtractor for all kinds of archives
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      ,*.tar.bz2)   tar xjf $1   ;;
      ,*.tar.gz)    tar xzf $1   ;;
      ,*.bz2)       bunzip2 $1   ;;
      ,*.rar)       unrar x $1   ;;
      ,*.gz)        gunzip $1    ;;
      ,*.tar)       tar xf $1    ;;
      ,*.tbz2)      tar xjf $1   ;;
      ,*.tgz)       tar xzf $1   ;;
      ,*.zip)       unzip $1     ;;
      ,*.Z)         uncompress $1;;
      ,*.7z)        7z x $1      ;;
      ,*.deb)       ar x $1      ;;
      ,*.tar.xz)    tar xf $1    ;;
      ,*.tar.zst)   tar xf $1    ;;
      ,*)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#arcolinux applications
alias att="arcolinux-tweak-tool"
alias adt="arcolinux-desktop-trasher"
alias abl="arcolinux-betterlockscreen"
alias agm="arcolinux-get-mirrors"
alias amr="arcolinux-mirrorlist-rank-info"
alias aom="arcolinux-osbeck-as-mirror"
alias ars="arcolinux-reflector-simple"
alias atm="arcolinux-tellme"
alias avs="arcolinux-vbox-share"
alias awa="arcolinux-welcome-app"

#remove
alias rmgitcache="rm -r ~/.cache/git"

#moving your personal files and folders from /personal to ~
alias personal='cp -Rf /personal/* ~'

#create a file called .zshrc-personal and put all your personal aliases
#in there. They will not be overwritten by skel.

[[ -f ~/.zshrc-personal ]] && . ~/.zshrc-personal

# reporting tools - install when not installed
# install neofetch
neofetch
# install screenfetch
#screenfetch
# install ufetch-git
#ufetch
# install ufetch-arco-git
#ufetch-arco
# install arcolinux-paleofetch-git
#paleofetch
# install alsi
#alsi
# install arcolinux-bin-git - standard on ArcoLinux isos (or sfetch - smaller)
#hfetch
# install lolcat
#sfetch | lolcat

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
#+end_src

* Tmux
#+begin_src conf :tangle .tmux.conf
set -g default-shell /bin/zsh

# -- general -------------------------------------------------------------------

set -g default-terminal "screen-256color"
# set-option -sa terminal-overrides ',screen-256color:RGB'
set -ga terminal-overrides ',xterm-256color*:Tc'
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

# remap prefix from <C-b> to <C-a>
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# copy things to system clipboard
# bind P paste-buffer
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-selection
# bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# bind -t vi-copy y copy-pipe "xclip -sel clip -i"
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n "~/.tmux.conf" "\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\""

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1     # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off


# -- navigation ----------------------------------------------------------------

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# split panes using | and -
bind \\ split-window -h
bind - split-window -v
unbind '"'
unbind %

# pane navigation
bind -r ^ last-window     # move to last active window
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window

# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental), possible values are:
#   - true
#   - false (default)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false


set -g mouse on

# set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"

set-window-option -g mode-keys vi
set-option -sa terminal-overrides ',XXX:RGB'


# set -g status-fg white
# set -g window-status-current-bg white
# set -g window-status-current-fg black
# set -g window-status-current-attr bold
# set -g status-interval 60
# set -g status-left-length 30
# set -g status-left '#[fg=green](#S) #(whoami)'
# set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]' set -g status-bg black
# abc



######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# # panes
# set -g pane-border-style 'fg=colour20 bg=colour233'
set -g pane-border-style 'fg=#333333 bg=colour233'
set -g pane-active-border-style 'bg=colour233 fg=colour9'

# # statusbar
set -g status-style 'bg=#333333 fg=#5eacd3 dim'
set -g status-position bottom
set -g status-justify left
# # set -g status-left ''
set -g status-right '#[fg=colour247,bg=#333333] %d/%m  #[fg=colour233,bg=colour8]  %H:%M  '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'bold'
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'



# # messages
# set -g message-style 'fg=colour232 bg=colour16 bold'
# set status-interval 1
# set -g status-style 'bg=#333333 fg=#5eacd3'
#+end_src

